import axios from "axios";
import { ElMessage } from "element-plus";

const apiUrl = import.meta.env.VITE_APP_APIURL;

console.log("apiUrl:", apiUrl);
console.log("window.apiUrl:", window.apiUrl);

// 创建axios实例
const service = axios.create({
  // baseURL: '/api_test', // api的base_url
  // baseURL: process.env.VUE_APP_APIURL, // api的base_url
  baseURL: window.apiUrl ?? apiUrl,
  // baseURL: 'https://dona2-admin-api.luciditv.net/',
  timeout: 300000, // 请求超时时间
});

// request拦截器
service.interceptors.request.use(
  (config) => {
    config.headers["Content-Type"] = "application/json";
    if (config.url !== `oauth/access_token`) {
      // const _token = `eyJhbGciOiJIUzI1NiJ9.eyJwcmluY2lwYWwiOiJINHNJQUFBQUFBQUFBSldXelc3YlJoU0Z4MjZLRkdpQk5rRml4N1dkb29DNkMraFlqcDBhMlpTaXhpcVRFYWtNcWFSeGdRcGppclpaVXlSTGptekpcL1lGM1hSWm9FU0JBWHFGdjBsVWZvSStRZFhaQmg3Wmxrdk1qSVZvSlBOK2NNNWYzYWtaXC92d0VmWmltb3grbUJsaVZwRUIzc3AyVGduOFRwa1piNTNqQU42Rmp6NHRUWGhwbWY5bjFLZ2pEVHV1dzdPUFwvTXZac0gxM2ZCRGVKNThUQ2lWaHpCVVJLa2ZuOFhmRlk4UTdGM2xEKzY3VEhGajJoQXdxeU1YdmNqc2hmNmZRUStKa042R0xQVXdNOG8rQlQ5U0k3SjJwQUc0WnJqMDBjSWZKU1FMR083NjFOdzgwSU1TWFN3NXRCODY3bWViek5pRmZ3RWZnUHpvMlNPZlZoOVgrV29sdnRvUmh5R3ZrZURPTXBxM1dnUTk0UDlJQTluXC9tZXJmXC83N3grdXo3andBb3hUY203Mm1lTDdVQUdmXC9cL1BEMjdqeVlRMkRPbzJDaHRQVUNlelJLMkc1dUZNNXU2dWZKXC83M3FcL1BYeXplXC9mZjhDU2MyTG5cL2Z0UjB5XC9mM05pSUJ3bEpDWTFMUFdLMko5ZllkNHVaTjJhYlQ3b3cxcHhna0lSK0t5VVI5ZnRYRVlVeEtcL2RhR29lVDkwM0JLcllSN09tR2F6NHozUmU5dG03cExkaURUZFBWR3dobU9mY0pCVlwvSXFlODZOcTV3Y2pjTTlXYVpXcnlnRUxLZjY1WWhwaTN4dXBERE9cL0FKdDg3MUJtYml0NEw5UWtVVXZDdHI1VnMzYk10bFJlb3R4ZFpMdW1MckJjRW5MSmQxczUwdkYxSldaWXlRSkhPYVdvK05wOWVUNjlQcllRU2ZjT2RjYjBMblNlOEpmR0ZhUXNUbkFpQmtDQjU4eUZJQllDaDlaY3NpSWNTSUxvcGliRXQzVGR0cVBGY1ZVd0pVeFJRSUgxTDFhT3NtRW1KV0pJZ1FKUEhob3hZcWlCQnpoNU9GQ0c0OWIzXC83U3U0NjRzOThzYW9LNXRYVjhwYTNvQVd4anFRdmFWa2tGQzB2TVwvSWFUT3VaYlVxT3FzV3FxcWhob3ZQZUYyMWtwMlJYUjhxSXUxSklTSko2eWVlM0Rkc05pRHRJVlwvMFl5NEJpZmt1SXZETTJidW1XdVN1ZHEyV1JVSFNtek1oek90amVNUkdjTWdFVlFwRlRadVFUd0lqSDBCQVBsc1dxcXBpQWlTNmZBQXdOYUhiY25tNmRkMDgrQVR5a21BQU9rMTh2RTZpRFRVdDF2WENNNG5xcFV0UEx3eDNYeE02TThpYlFqUEl1c2VubE9kRHRkbWFVZDhuTUtPK0NrcFwvVVRyZmhHSmhSc2xGZmtTQ0trN29DeVM5cWRoRGlGcllsUlMzeHV1S2lMZ2crNGVhVkxwamZLa21DYjJuZHhISkVRZlBuUFM4ZEpcL1RYV3AzVTF1XC9YSENkeW5mWm1jOE9JSGp4MGsrMm5yYTNJMVVqek5FYk56WFF2T3lManVuTlwvRzI4NWFIdVwvanRhM2QzWTN0aWo0OHZRd09DU3hOZ3BJXC9FMDQ5SUorUUlcL1puOTdCTCt2MWpRZWJXdytcL1wvaDlJTVlpY0V3MEFBQT09Iiwic3ViIjoiemhpaGFvLnhpYW9AbHVjaWRpdHYuY29tfDEyMzQ1Njc4Iiwicm9sZXMiOlsiUk9MRV9BQ1RJVklUWV9NQU5BR0VfRURJVEFCTEUiLCJST0xFX0FDVElWSVRZX01BTkFHRV9FWFBPUlRBQkxFIiwiUk9MRV9BQ1RJVklUWV9NQU5BR0VfUkVBREFCTEUiLCJST0xFX0FMTE9XQU5DRV9FRElUQUJMRSIsIlJPTEVfQUxMT1dBTkNFX0VYUE9SVEFCTEUiLCJST0xFX0FMTE9XQU5DRV9SRUFEQUJMRSIsIlJPTEVfQlJBTkNIX0VESVRBQkxFIiwiUk9MRV9CUkFOQ0hfRVhQT1JUQUJMRSIsIlJPTEVfQlJBTkNIX1JFQURBQkxFIiwiUk9MRV9DT05UQUNUQUdfRURJVEFCTEUiLCJST0xFX0NPTlRBQ1RBR19FWFBPUlRBQkxFIiwiUk9MRV9DT05UQUNUQUdfUkVBREFCTEUiLCJST0xFX0NPTlRBQ1RJTVBPUlRfRURJVEFCTEUiLCJST0xFX0NPTlRBQ1RJTVBPUlRfRVhQT1JUQUJMRSIsIlJPTEVfQ09OVEFDVElNUE9SVF9SRUFEQUJMRSIsIlJPTEVfQ09OVEFDVE9SX0VESVRBQkxFIiwiUk9MRV9DT05UQUNUT1JfRVhQT1JUQUJMRSIsIlJPTEVfQ09OVEFDVE9SX1JFQURBQkxFIiwiUk9MRV9ERVNLX0tFWUlOX0VESVRBQkxFIiwiUk9MRV9ERVNLX0tFWUlOX0VYUE9SVEFCTEUiLCJST0xFX0RFU0tfS0VZSU5fUkVBREFCTEUiLCJST0xFX0RFU0tfUkVQT1JUX0VESVRBQkxFIiwiUk9MRV9ERVNLX1JFUE9SVF9FWFBPUlRBQkxFIiwiUk9MRV9ERVNLX1JFUE9SVF9SRUFEQUJMRSIsIlJPTEVfRE9OQVRJT05CV19FRElUQUJMRSIsIlJPTEVfRE9OQVRJT05CV19FWFBPUlRBQkxFIiwiUk9MRV9ET05BVElPTkJXX1JFQURBQkxFIiwiUk9MRV9ET05BVElPTk1BSUxfRURJVEFCTEUiLCJST0xFX0RPTkFUSU9OTUFJTF9FWFBPUlRBQkxFIiwiUk9MRV9ET05BVElPTk1BSUxfUkVBREFCTEUiLCJST0xFX0RPTkFUSU9OX0VESVRBQkxFIiwiUk9MRV9ET05BVElPTl9FWFBPUlRBQkxFIiwiUk9MRV9ET05BVElPTl9SRUFEQUJMRSIsIlJPTEVfRE9OQVVTRV9FRElUQUJMRSIsIlJPTEVfRE9OQVVTRV9FWFBPUlRBQkxFIiwiUk9MRV9ET05BVVNFX1JFQURBQkxFIiwiUk9MRV9HRU5FUkFMTUFJTF9FRElUQUJMRSIsIlJPTEVfR0VORVJBTE1BSUxfRVhQT1JUQUJMRSIsIlJPTEVfR0VORVJBTE1BSUxfUkVBREFCTEUiLCJST0xFX0lOVk9JQ0VfRURJVEFCTEUiLCJST0xFX0lOVk9JQ0VfRVhQT1JUQUJMRSIsIlJPTEVfSU5WT0lDRV9SRUFEQUJMRSIsIlJPTEVfTUFOVUFMX0lOVk9JQ0VfRURJVEFCTEUiLCJST0xFX01BTlVBTF9JTlZPSUNFX0VYUE9SVEFCTEUiLCJST0xFX01BTlVBTF9JTlZPSUNFX1JFQURBQkxFIiwiUk9MRV9NRU1CRVJQTEFOX0VESVRBQkxFIiwiUk9MRV9NRU1CRVJQTEFOX0VYUE9SVEFCTEUiLCJST0xFX01FTUJFUlBMQU5fUkVBREFCTEUiLCJST0xFX09SR0FOSVpUSU9OX0VESVRBQkxFIiwiUk9MRV9PUkdBTklaVElPTl9FWFBPUlRBQkxFIiwiUk9MRV9PUkdBTklaVElPTl9SRUFEQUJMRSIsIlJPTEVfUFJPRklMRU1BSUxfRURJVEFCTEUiLCJST0xFX1BST0ZJTEVNQUlMX0VYUE9SVEFCTEUiLCJST0xFX1BST0ZJTEVNQUlMX1JFQURBQkxFIiwiUk9MRV9QUk9KRUNUX0VESVRBQkxFIiwiUk9MRV9QUk9KRUNUX0VYUE9SVEFCTEUiLCJST0xFX1BST0pFQ1RfUkVBREFCTEUiLCJST0xFX1JFQ0VJUFRfQU5OVUFMX0VESVRBQkxFIiwiUk9MRV9SRUNFSVBUX0FOTlVBTF9FWFBPUlRBQkxFIiwiUk9MRV9SRUNFSVBUX0FOTlVBTF9SRUFEQUJMRSIsIlJPTEVfUkVDRUlQVF9QUklOVF9FRElUQUJMRSIsIlJPTEVfUkVDRUlQVF9QUklOVF9FWFBPUlRBQkxFIiwiUk9MRV9SRUNFSVBUX1BSSU5UX1JFQURBQkxFIiwiUk9MRV9SRUNFSVBUX1JQVElSU19FRElUQUJMRSIsIlJPTEVfUkVDRUlQVF9SUFRJUlNfRVhQT1JUQUJMRSIsIlJPTEVfUkVDRUlQVF9SUFRJUlNfUkVBREFCTEUiLCJST0xFX1JFQ0VJUFRfU0VUVVBfRURJVEFCTEUiLCJST0xFX1JFQ0VJUFRfU0VUVVBfRVhQT1JUQUJMRSIsIlJPTEVfUkVDRUlQVF9TRVRVUF9SRUFEQUJMRSIsIlJPTEVfU1VCU0NSSVBUSU9OX0VESVRBQkxFIiwiUk9MRV9TVUJTQ1JJUFRJT05fRVhQT1JUQUJMRSIsIlJPTEVfU1VCU0NSSVBUSU9OX1JFQURBQkxFIiwiUk9MRV9VU0VSR1JPVVBfRURJVEFCTEUiLCJST0xFX1VTRVJHUk9VUF9FWFBPUlRBQkxFIiwiUk9MRV9VU0VSR1JPVVBfUkVBREFCTEUiLCJST0xFX1VTRVJfRURJVEFCTEUiLCJST0xFX1VTRVJfRVhQT1JUQUJMRSIsIlJPTEVfVVNFUl9SRUFEQUJMRSJdLCJpc3MiOiJMdWNpZGkgUGF5IiwiY29tcGFueSI6ImNvbXBhbnktMWM4ZjlhNWYtYTYwNS00Y2U5LTkxNGUtNDQ0NWFlODc0YzNkIiwiZXhwIjozMjI0ODI4NTE4LCJpYXQiOjE2NDgwMjg1MTgsImFjY291bnQiOiJhY2NvdW50LTU5MTUwMDVmLTM4MDEtNDFiZS1iOGQwLTM4MjRmYjEyMDc0ZSJ9.szPW5zh2oSfy7ShdGvF23FYx0EQzFZ49DO-pIbawKRY`
      // config.headers['Authorization'] = `Bearer ${_token}`

      return config;
    } else {
      return config;
    }
  },
  (error) => {
    console.log(error); // for debug
    Promise.reject(error);
  }
);

// respone拦截器
service.interceptors.response.use(
  (res) => {
    return res;
  },
  (error) => {
    // console.log('err' +JSON.stringify(error)) // for debug
    // const config = response.config
    if (error.response) {
      console.log(`error.response.status:${error.response.status}`);
      switch (error.response.status) {
        case 401:
          console.log("401");
          break;
        case 403:
          if (
            error.response.data.error === "Forbidden" &&
            error.response.data.message === "Forbidden"
          ) {
            console.log(`error.response.error:${"Forbidden"}`);
            ElMessage({
              showClose: true,
              message: "此帳戶權限不足!",
              type: "error",
            });
          }
          throw Promise.reject(error.response.data);
        case 500:
          ElMessage({
            showClose: true,
            message: "請洽系統管理員或產品服務人員!",
            type: "error",
          });
          throw Promise.reject(error.response.data);
        default:
          console.log("default");
          if (error.response.data) {
            ElMessage({
              showClose: true,
              message: error.response.data.message,
              type: "error",
            });
          } else {
            ElMessage({
              showClose: true,
              message: error.message,
              type: "error",
            });
          }

          // return Promise.reject(error.response.data);
          throw Promise.reject(error.response.data);
      }
      // 返回介面返回的錯誤資訊
    }
  }
);

export default service;
